/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
       if(head==NULL){
           return head;
       }
        
        ListNode*A=head,*B=head->next,*C=B;
        //ListNode*q=B;
        while(B!=NULL && B->next!=NULL){
            A->next=B->next;
            A=A->next;
            B->next=A->next;
            B=B->next;
        }
        A->next=C;
        return head;
    }
};
/*class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL)
            return head;
        ListNode *temp1 = head, *temp2 = head->next, *temp3 = temp2;
        while(temp2 != NULL and temp2->next != NULL){
            temp1->next = temp2->next;
            temp1 = temp1->next;
            temp2->next = temp1->next;
            temp2 = temp2->next;
        }        
        temp1->next = temp3;
        return head;
    }
};*/